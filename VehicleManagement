import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;

public class VehicleManagement {
    public static void main(String[] args) {
        ArrayList<Vehicle> vehicleList = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        int choice;
        do {
            System.out.println("\nMenu:");
            System.out.println("1. Add a vehicle");
            System.out.println("2. Display a list of vehicle details");
            System.out.println("3. Delete a vehicle");
            System.out.println("4. Sort vehicle list by age");
            System.out.println("5. Quit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine(); 

            switch (choice) {
                case 1:
                    System.out.print("Enter registration number: ");
                    String regNo = scanner.nextLine();
                    System.out.print("Enter make: ");
                    String make = scanner.nextLine();
                    System.out.print("Enter year of manufacture: ");
                    int yearOfManufacture = scanner.nextInt();
                    System.out.print("Enter value: ");
                    double value = scanner.nextDouble();
                    vehicleList.add(new Vehicle(regNo, make, yearOfManufacture, value));
                    System.out.println("Vehicle added successfully!");
                    break;
                case 2:
                    if (vehicleList.isEmpty()) {
                        System.out.println("No vehicles to display.");
                    } else {
                        System.out.println("List of vehicle details:");
                        for (Vehicle vehicle : vehicleList) {
                            System.out.println(vehicle);
                        }
                    }
                    break;
                case 3:
                    if (vehicleList.isEmpty()) {
                        System.out.println("No vehicles to delete.");
                    } else {
                        System.out.print("Enter the index of the vehicle to delete: ");
                        int index = scanner.nextInt();
                        if (index >= 0 && index < vehicleList.size()) {
                            vehicleList.remove(index);
                            System.out.println("Vehicle deleted successfully!");
                        } else {
                            System.out.println("Invalid index.");
                        }
                    }
                    break;
                case 4:
                    if (vehicleList.isEmpty()) {
                        System.out.println("No vehicles to sort.");
                    } else {
                        int sortChoice;
                        do {
                            System.out.println("\nSort Menu:");
                            System.out.println("1. Sort by age (ascending)");
                            System.out.println("2. Sort by age (descending)");
                            System.out.println("3. Back to main menu");
                            System.out.print("Enter your choice: ");
                            sortChoice = scanner.nextInt();
                            scanner.nextLine(); 

                            switch (sortChoice) {
                                case 1:
                                    Collections.sort(vehicleList, Comparator.comparingInt(Vehicle::getYearOfManufacture));
                                    System.out.println("List of vehicle details sorted by age (ascending):");
                                    for (Vehicle vehicle : vehicleList) {
                                        System.out.println(vehicle);
                                    }
                                    break;
                                case 2:
                                    Collections.sort(vehicleList, Comparator.comparingInt(Vehicle::getYearOfManufacture).reversed());
                                    System.out.println("List of vehicle details sorted by age (descending):");
                                    for (Vehicle vehicle : vehicleList) {
                                        System.out.println(vehicle);
                                    }
                                    break;
                                case 3:
                                    System.out.println("Returning to the main menu...");
                                    break;
                                default:
                                    System.out.println("Invalid choice. Please try again.");
                            }
                        } while (sortChoice != 3);
                    }
                    break;
                case 5:
                    System.out.println("Exiting program...");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        } while (choice != 5);

        scanner.close();
    }
}
